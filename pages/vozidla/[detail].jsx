import Footer from "@/components/Footer";
import Navbar from "@/components/Navbar";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { CircleSpinner, CombSpinner } from "react-spinners-kit";
import styles from "./[detail].module.css";

const Detail = () => {
  const router = useRouter();
  const { name, detail } = router.query;
  const [loaded, setLoaded] = useState(false);
  const [params, setParams] = useState();

  async function fetchModels() {
    const res = await fetch(
      `/api/detail?` +
        new URLSearchParams({
          detail: "https://www.dynocheck.com/cs/catalog/detail/" + detail,
        })
    );
    const json = await res.json();
    setParams(json[0]);
    setLoaded(true);
    document.getElementById("top").scrollIntoView();
  }

  useEffect(() => {
    fetchModels();
  }, [detail]);

  return (
    <>
      <Head>
        <title>TTC Performance</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="TTC_WEB_Icon.svg" />
      </Head>
      <Navbar />

      <main className={styles.detail}>
        <h1>{name && name.toUpperCase()}</h1>
        <p className={styles.support}>VYLADĚNO NA ZKUŠEBNĚ</p>

        {loaded ? (
          <>
            <div className={styles.string}>
              <div className={styles.row}>
                <div className={styles.param}>
                  ORIGINÁLNÍ <span>PARAMETRY</span>
                </div>
                <div className={styles.value}>
                  <p>
                    {params &&
                      params.original.split(" ")[0].toUpperCase().slice(0, -2)}
                    <span> KW</span>
                  </p>
                  <span className={styles.border}></span>
                  <p>
                    {params &&
                      params.original.split(" ")[1].toUpperCase().slice(0, -2)}
                    <span> PS</span>
                  </p>
                  <span className={styles.border}></span>
                  <p>
                    {params &&
                      params.original.split(" ")[2].toUpperCase().slice(0, -2)}
                    <span> NM</span>
                  </p>
                </div>
              </div>
              <div className={styles.row}>
                <div className={styles.param}>
                  MAXIMÁLNÍ <span>PARAMETRY</span>
                </div>
                <div className={styles.value}>
                  <p>
                    {params &&
                      params.maximal.split(" ")[0].toUpperCase().slice(0, -2)}
                    <span> KW</span>
                  </p>
                  <span className={styles.border}></span>
                  <p>
                    {params &&
                      params.maximal.split(" ")[1].toUpperCase().slice(0, -2)}
                    <span> PS</span>
                  </p>
                  <span className={styles.border}></span>
                  <p>
                    {params &&
                      params.maximal.split(" ")[2].toUpperCase().slice(0, -2)}
                    <span> NM</span>
                  </p>
                </div>
              </div>
            </div>
            {params && params.eco ? (
              <>
                <h2>3 RŮZNÉ VARIANTY ÚPRAV</h2>

                <div className={styles.cards}>
                  <div className={`${styles.card} ${styles.optimal}`}>
                    <p className="name">OPTIMAL</p>
                    <p>
                      {params &&
                        params.optimal.split(" ")[0].toUpperCase().slice(0, -2)}
                      <span>KW</span>
                      <span className={styles.border}></span>
                      {params &&
                        params.optimal.split(" ")[1].toUpperCase().slice(0, -2)}
                      <span>PS</span>
                      <span className={styles.border}></span>
                      {params &&
                        params.optimal.split(" ")[2].toUpperCase().slice(0, -2)}
                      <span>NM</span>
                    </p>
                  </div>
                  <div className={`${styles.card} ${styles.eco}`}>
                    <p className="name">ECO-FUEL</p>
                    <p>
                      {params &&
                        params.eco.split(" ")[0].toUpperCase().slice(0, -2)}
                      <span>KW</span>
                      <span className={styles.border}></span>
                      {params &&
                        params.eco.split(" ")[1].toUpperCase().slice(0, -2)}
                      <span>PS</span>
                      <span className={styles.border}></span>
                      {params &&
                        params.eco.split(" ")[2].toUpperCase().slice(0, -2)}
                      <span>NM</span>
                    </p>
                  </div>
                  <div className={`${styles.card} ${styles.racing}`}>
                    <p className="name">RACING+</p>
                    <p>
                      {params &&
                        params.racing.split(" ")[0].toUpperCase().slice(0, -2)}
                      <span>KW</span>
                      <span className={styles.border}></span>
                      {params &&
                        params.racing.split(" ")[1].toUpperCase().slice(0, -2)}
                      <span>PS</span>
                      <span className={styles.border}></span>
                      {params &&
                        params.racing.split(" ")[2].toUpperCase().slice(0, -2)}
                      <span> NM</span>
                    </p>
                  </div>
                </div>
              </>
            ) : null}
            {params && params.chart ? (
              <img className={styles.chart} src={params.chart} />
            ) : null}{" "}
          </>
        ) : (
          <div style={{ margin: "20vh auto", width: "min-content" }}>
            <CircleSpinner size={100} color="grey" />
          </div>
        )}
      </main>

      <Footer />
    </>
  );
};

export default Detail;
