import Footer from "@/components/Footer";
import Navbar from "@/components/Navbar";
import Head from "next/head";
import Link from "next/link";
import supabase from "@/lib/supabaseClient";
import { Card, Flex, Image, Stack, Text } from "@mantine/core";
import Hero from "@/components/Hero";
import { useMediaQuery } from "@mantine/hooks";

export async function getStaticProps() {
  const { data: categoryData, error: categoryError } = await supabase
    .from("categories")
    .select("id")
    .eq("name", "car")
    .order("name", { ascending: true })
    .single();

  if (categoryError || !categoryData) {
    console.error("Category fetch error:", categoryError);
    return { props: { brands: [] }, revalidate: 3600 };
  }

  const categoryId = categoryData.id;

  const { data: brandCategoryData, error: brandCategoryError } = await supabase
    .from("brand_categories")
    .select("brand_id")
    .eq("category_id", categoryId);

  if (brandCategoryError || !brandCategoryData) {
    console.error("Brand-Category fetch error:", brandCategoryError);
    return { props: { brands: [] }, revalidate: 3600 };
  }

  const brandIds = brandCategoryData.map((item) => item.brand_id);

  const { data: brands, error: brandsError } = await supabase
    .from("brands")
    .select("id, name, url, image")
    .order("name", { ascending: true })
    .in("id", brandIds);

  if (brandsError) {
    console.error("Supabase fetch error:", brandsError);
    return { props: { brands: [] }, revalidate: 3600 };
  }

  return { props: { brands }, revalidate: 3600 };
}

const Vozidla = ({ brands }) => {
  const smallWindow = useMediaQuery("(max-width: 1200px)");

  return (
    <>
      <Head>
        <title>TTC Performance</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="TTC_WEB_Icon.svg" />
      </Head>
      <Navbar />
      <Hero image="/media/foto/vozidla.png" title="Osobní vozidla" />
      <Stack
        px={32}
        py={128}
        justify="center"
        align="start"
        gap={32}
        maw={1280}
        mx="auto"
        w="100%"
      >
        <div className="nav">
          <Link href="/vozidla">Značky vozidel</Link>
          {` > Osobní vozidla`}
        </div>
        <Flex
          gap={16}
          wrap="wrap"
          mx="auto"
          my={32}
          align="center"
          justify="center"
        >
          {brands.map((brand) => (
            <Link
              key={brand.id}
              href={`/vozidla/osobni/${encodeURIComponent(brand.name)}`}
              passHref
              style={{ color: "inherit", textDecoration: "inherit" }}
            >
              <Card
                radius={8}
                style={{
                  boxShadow: "rgba(0, 0, 0, 0.15) 0px 5px 15px",
                }}
                w={128}
                h={160}
              >
                <Flex direction="column" justify="space-between" h={128}>
                  <Text ta="center">{brand.name}</Text>
                  {brand.image ? (
                    <Image
                      width={72}
                      height={72}
                      src={brand.image}
                      style={{ aspectRatio: 1 / 1, objectFit: "contain" }}
                      alt={brand.name}
                    />
                  ) : (
                    <Image
                      width={72}
                      height={72}
                      src={`/media/brands/${brand.name}.jpg`}
                      style={{ aspectRatio: 1 / 1, objectFit: "contain" }}
                      alt={brand.name}
                    />
                  )}
                </Flex>
              </Card>
            </Link>
          ))}
        </Flex>

        <p>&#8203;</p>
      </Stack>
      <Footer />
    </>
  );
};

export default Vozidla;
